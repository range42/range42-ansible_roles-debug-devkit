#!/bin/bash

show_example() {
  echo "  echo 'px-testing' | $(basename "$0") network_list_interfaces_node"

}

if [ "$1" = '-h' ] ||
  [ "$1" = '--help' ]; then
  echo
  echo NAME
  echo
  echo "  $(basename "$0") - LIB / INCLUDE script providing basic generic helper "
  echo
  echo OPTIONS
  echo
  echo "                     $(basename "$0") [-h|--help] "
  echo "  echo [NODE_NAME] | $(basename "$0") [--json]    - force output as json *default "
  echo "  echo [NODE_NAME] | $(basename "$0") [--text]    - force output as text"
  echo ""
  echo EXAMPLE
  echo
  echo "$(show_example)"
  echo
  echo
  exit 1
fi

#### #### #### #### #### #### #### #### #### #### #### #### #### #### #### ####

set -euo pipefail
ROLE_NAME="range42-ansible_roles-proxmox_controller"
DEFAULT_OPEN_VAULT_PW_FILE_PATH="/tmp/vault/vault_pass.txt"
# CURRENT_ANSIBLE_CONFIG="./ansible_no_skipped_json.cfg"
CURRENT_ANSIBLE_CONFIG="$RANGE42_ANSIBLE_ROLES__DEVKITS_DIR/ansible_no_skipped_json.cfg"

ARG_ACTION="${1:-}"
# ARG_NODE_NAME="${2:-}"

#### #### #### #### #### #### #### #### #### #### #### #### #### #### #### ####

proxmox__inc.warmup_checks.sh
proxmox__inc.basic_vm_actions_warmup_checks.to.sh "$ARG_ACTION"

#### #### #### #### #### #### #### #### #### #### #### #### #### #### #### ####
#
# open vault - look for ansible-agent
#

if [[ -f $DEFAULT_OPEN_VAULT_PW_FILE_PATH ]]; then
  ANSIBLE_VAULT_ARG=(--vault-password-file "$DEFAULT_OPEN_VAULT_PW_FILE_PATH")

else

  OPEN_VAULT_PW_FILE_PATH=$(devkit_ansible.open_vault.to.file.sh)
  ANSIBLE_VAULT_ARG=(--vault-password-file "$OPEN_VAULT_PW_FILE_PATH")

fi

#### #### #### #### #### #### #### #### #### #### #### #### #### #### #### ####
#
# inline playbook execution
#
#### #### #### #### #### #### #### #### #### #### #### #### #### #### #### ####



# for NODE_NAME in $(cat - ); do

#   # note <<-EOF - delete should remove tab from pass to stdin.

#   # devkit_utils.text.echo_error.to.text.to.stderr.sh "from stdin $NODE_NAME"

#   (
#     # ANSIBLE_CONFIG="./ansible_no_skipped_json.cfg"

#     ANSIBLE_CONFIG="$CURRENT_ANSIBLE_CONFIG" \
#       ansible-playbook -i "$RANGE42_ANSIBLE_ROLES__INVENTORY_DIR/off_cr_42.yaml" \
#       "${ANSIBLE_VAULT_ARG[@]}" \
#       /dev/stdin <<EOF

# - hosts: px-testing
#   gather_facts: false
#   vars_files:
#     - "$RANGE42_ANSIBLE_ROLES__DEVKITS_DIR/secrets/px-testing.cr42_tailscale.yaml"
#   tasks:
#     - name: RUN $ROLE_NAME WITH VARS
#       include_role:
#         name: $ROLE_NAME
#       vars:
#         proxmox_vm_action: "$ARG_ACTION"
#         proxmox_node: $NODE_NAME

# EOF
#   ) | jq -c --arg action "$ARG_ACTION" '
#          .plays[].tasks[]
#         | .hosts[]
#         | select(type=="object" and has($action))
#         | .[$action]
#       '
#   # jq -c '.[]'

# done

ANSIBLE_CONFIG="$CURRENT_ANSIBLE_CONFIG"
INVENTORY="$RANGE42_ANSIBLE_ROLES__INVENTORY_DIR/off_cr_42.yaml"
VAULT_ARGS=("${ANSIBLE_VAULT_ARG[@]}")

PLAYBOOK_VARS_FILE="$RANGE42_ANSIBLE_ROLES__DEVKITS_DIR/secrets/px-testing.cr42_tailscale.yaml"

# store stdin an array
# if the array is len 0 ; ansible will take the default value of NODE_NAME from the ansible vault file.
#


IFS=$'\n'

if [ -t 0 ]; then # NO STDIN
  NODE_NAMES=("")
else # STDIN then store data in array
  mapfile -t NODE_NAMES
fi



for NODE_NAME in "${NODE_NAMES[@]}"; do

  # devkit_utils.text.echo_trace.to.text.to.stderr.sh "$NODE_NAME"

  # if no node specified in STDIN then swe take the default value of NODE_NAME from the ansible vault file.
  #
  if [[ -n "$NODE_NAME" ]]; then
    EXTRA_VAR="        proxmox_node: \"$NODE_NAME\""
  else
    EXTRA_VAR=""
  fi

  (
    ANSIBLE_CONFIG="$ANSIBLE_CONFIG" \
      ansible-playbook -i "$INVENTORY" "${VAULT_ARGS[@]}" /dev/stdin <<EOF
- hosts: px-testing
  gather_facts: false
  vars_files:
    - "$PLAYBOOK_VARS_FILE"
  tasks:
    - name: RUN $ROLE_NAME WITH VARS
      include_role:
        name: $ROLE_NAME
      vars:
        proxmox_vm_action: "$ARG_ACTION"
${EXTRA_VAR}
EOF
  ) | jq -c --arg action "$ARG_ACTION" '
         .plays[].tasks[]
        | .hosts[]
        | select(type=="object" and has($action))
        | .[$action]
      '

done
